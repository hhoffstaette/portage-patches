From be4edbe174d9bbe1e130a91ee39550489b0e3e5e Mon Sep 17 00:00:00 2001
From: Brian Brazil <brian.brazil@robustperception.io>
Date: Fri, 7 Jun 2019 11:35:02 +0100
Subject: [PATCH] Start a new WAL segement on head truncation. (#605)

This reduces disk space usage to not be a minimum of 3 128MB files
in small setups. This will possibly also help debug wal data issues,
by making things a bit more deterministic.

Signed-off-by: Brian Brazil <brian.brazil@robustperception.io>
---

diff --git a/src/github.com/prometheus/prometheus/vendor/github.com/prometheus/tsdb/head.go b/src/github.com/prometheus/prometheus/vendor/github.com/prometheus/tsdb/head.go
index 087e64d1..b14c056f 100644
--- a/src/github.com/prometheus/prometheus/vendor/github.com/prometheus/tsdb/head.go
+++ b/src/github.com/prometheus/prometheus/vendor/github.com/prometheus/tsdb/head.go
@@ -576,6 +576,12 @@ func (h *Head) Truncate(mint int64) (err error) {
 	if err != nil {
 		return errors.Wrap(err, "get segment range")
 	}
+	// Start a new segment, so low ingestion volume TSDB don't have more WAL than
+	// needed.
+	err = h.wal.NextSegment()
+	if err != nil {
+		return errors.Wrap(err, "next segment")
+	}
 	last-- // Never consider last segment for checkpoint.
 	if last < 0 {
 		return nil // no segments yet.
diff --git a/src/github.com/prometheus/prometheus/vendor/github.com/prometheus/tsdb/wal/wal.go b/src/github.com/prometheus/prometheus/vendor/github.com/prometheus/tsdb/wal/wal.go
index cb2e11ff..f0e413f5 100644
--- a/src/github.com/prometheus/prometheus/vendor/github.com/prometheus/tsdb/wal/wal.go
+++ b/src/github.com/prometheus/prometheus/vendor/github.com/prometheus/tsdb/wal/wal.go
@@ -393,6 +393,13 @@ func SegmentName(dir string, i int) string {
 	return filepath.Join(dir, fmt.Sprintf("%08d", i))
 }
 
+// NextSegment creates the next segment and closes the previous one.
+func (w *WAL) NextSegment() error {
+	w.mtx.Lock()
+	defer w.mtx.Unlock()
+	return w.nextSegment()
+}
+
 // nextSegment creates the next segment and closes the previous one.
 func (w *WAL) nextSegment() error {
 	// Only flush the current page if it actually holds data.
