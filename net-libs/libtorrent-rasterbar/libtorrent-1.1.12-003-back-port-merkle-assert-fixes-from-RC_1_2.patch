From 9ab435961d8747d3b1af82d40465507b11104772 Mon Sep 17 00:00:00 2001
From: arvidn <arvid@libtorrent.org>
Date: Sun, 17 Mar 2019 19:09:12 +0100
Subject: [PATCH] back-port merkle assert fixes from RC_1_2

---
 src/bt_peer_connection.cpp | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/src/bt_peer_connection.cpp b/src/bt_peer_connection.cpp
index d0237fe4af..a3a1e5c577 100644
--- a/src/bt_peer_connection.cpp
+++ b/src/bt_peer_connection.cpp
@@ -1144,14 +1144,16 @@ namespace libtorrent
 				// and we can allocate the disk buffer and receive
 				// into it
 
-				if (list_size > m_recv_buffer.packet_size() - 13)
+				if (list_size > m_recv_buffer.packet_size() - 13 || list_size < 0)
 				{
+					received_bytes(0, received);
 					disconnect(errors::invalid_hash_list, op_bittorrent, 2);
 					return;
 				}
 
 				if (m_recv_buffer.packet_size() - 13 - list_size > t->block_size())
 				{
+					received_bytes(0, received);
 					disconnect(errors::packet_too_large, op_bittorrent, 2);
 					return;
 				}
@@ -1176,6 +1178,7 @@ namespace libtorrent
 
 				if (m_recv_buffer.packet_size() - 9 > t->block_size())
 				{
+					received_bytes(0, received);
 					disconnect(errors::packet_too_large, op_bittorrent, 2);
 					return;
 				}
@@ -1210,6 +1213,12 @@ namespace libtorrent
 			if (merkle)
 			{
 				list_size = detail::read_int32(ptr);
+				if (list_size < 0)
+				{
+					received_bytes(0, received);
+					disconnect(errors::invalid_hash_list, op_bittorrent, 2);
+					return;
+				}
 				p.length = m_recv_buffer.packet_size() - list_size - header_size;
 				header_size += list_size;
 			}
